import boto3
import base64
import json
from datetime import datetime

s3 = boto3.client('s3')
rekognition = boto3.client('rekognition')
dynamodb = boto3.resource('dynamodb')

BUCKET = 'face-attendance-system-using-rek'  # Replace if different
COLLECTION = 'employee-faces'
TABLE_NAME = 'UsersTable'

def lambda_handler(event, context):
    try:
        # Parse input
        body = json.loads(event['body'])
        employee_id = body['employeeId']
        name = body['name']
        image_data = body['imageData']  # base64 string

        # Convert base64 to bytes
        image_bytes = base64.b64decode(image_data)
        s3_key = f'employees/{employee_id}.jpg'

        # Upload to S3
        s3.put_object(Bucket=BUCKET, Key=s3_key, Body=image_bytes, ContentType='image/jpeg')

        # Index face with Rekognition
        response = rekognition.index_faces(
            CollectionId=COLLECTION,
            Image={
                'S3Object': {
                    'Bucket': BUCKET,
                    'Name': s3_key
                }
            },
            ExternalImageId=employee_id,
            DetectionAttributes=['DEFAULT']
        )

        face_id = response['FaceRecords'][0]['Face']['FaceId'] if response['FaceRecords'] else None

        # Store in DynamoDB
        table = dynamodb.Table(TABLE_NAME)
        table.put_item(
            Item={
                'EmployeeID': employee_id,
                'Name': name,
                'ImageKey': s3_key,
                'FaceId': face_id or 'N/A',
                'CreatedAt': datetime.utcnow().isoformat()
            }
        )

        return {
            'statusCode': 200,
            'body': json.dumps({'message': 'User indexed successfully'})
        }

    except Exception as e:
        return {
            'statusCode': 500,
            'body': json.dumps({'error': str(e)})
        }
